@using System.Net.Http.Headers
@using System.Net.Http
@using Microsoft.AspNetCore.Http
@using Microsoft.Net.Http.Headers

@inject IJSRuntime JS
@inject HttpClient HttpClient
@inject NavigationManager NavigationManager
@inject IHttpContextAccessor HttpContextAccessor
<base href="/" />


<button @onclick="OnDeleteButton" class="bg-red-500 hover:bg-red-700 text-white font-bold py-1 px-4 rounded">
    Delete
</button>
@if (IsOpen)
{
    <div class="fixed inset-0 flex items-center justify-center bg-black bg-opacity-50">
        <div class="bg-white rounded-lg shadow-lg rounded p-5">
            <div class="text-lg font-semibold mb-2">Delete Confirmation</div>
            <div class="text-gray-700 mb-4">Are you sure you want to delete?</div>
            <div class="flex justify-end">
                <button @onclick="OnConfirm" class="px-4 py-2 bg-red-500 text-white rounded hover:bg-red-600 mr-2">Delete</button>
                <button @onclick="OnCancel" class="px-4 py-2 bg-gray-300 text-gray-700 rounded hover:bg-gray-400">Cancel</button>
            </div>
        </div>
    </div>
}


@code {
    [Parameter]
    public bool IsOpen { get; set; }
    [Parameter]
    public PostView PostView{ get; set; }

    private async Task OnConfirm(MouseEventArgs e)
    {
        var request = new HttpRequestMessage
            {
                Method = HttpMethod.Delete,
                RequestUri = new Uri(NavigationManager.BaseUri + $"Posts/{PostView.Id}")
            };

        var cookieValue = HttpContextAccessor.HttpContext.Request.Cookies["IdentityCookie"];
        await JS.InvokeVoidAsync("console.log", request.RequestUri);
        request.Headers.Add("Cookie", new CookieHeaderValue("IdentityCookie", cookieValue).ToString());

        var response = await HttpClient.SendAsync(request);

        if (response.IsSuccessStatusCode)
        {
            NavigationManager.NavigateTo("/Posts", true);
        }
        
        IsOpen = false;
    }

    private void OnCancel(MouseEventArgs e)
    {
        IsOpen = false;
    }

    private void OnDeleteButton()
    {
        IsOpen = true;
    }
}